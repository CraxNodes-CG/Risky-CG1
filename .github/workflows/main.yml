name: Persistent Ubuntu VPS (SSHX + 1s Autosave + Heartbeat + Auto-Restart)

on:
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 350  # Max ~6 hours

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Prepare vm_data folder inside repo
        run: |
          echo "üìÅ Preparing vm_data folder inside repo..."
          mkdir -p $GITHUB_WORKSPACE/vm_data
          cd $GITHUB_WORKSPACE/vm_data
          echo "‚úÖ vm_data folder ready at $GITHUB_WORKSPACE/vm_data"

      - name: Restore previous VM data from vm-data branch
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üîÅ Restoring VM data from vm-data branch..."
          cd $GITHUB_WORKSPACE/vm_data
          rm -rf ./*
          git clone --branch vm-data https://$PAT_TOKEN@github.com/${{ github.repository }} . || echo "‚ö†Ô∏è vm-data branch not found, starting fresh."
          echo "‚úÖ Data restored."

      - name: Install and Start SSHX in Background
        run: |
          echo "‚öôÔ∏è Installing and starting SSHX..."
          cd $GITHUB_WORKSPACE/vm_data
          nohup bash -c "curl -sSf https://sshx.io/get | sh -s run > $GITHUB_WORKSPACE/vm_data/sshx_link.txt 2>&1" &
          sleep 10

          echo "üåê SSHX Link (open in browser):"
          grep -Eo 'https://sshx.io/[^ ]+' $GITHUB_WORKSPACE/vm_data/sshx_link.txt || echo "‚ùå SSHX link not found"
          echo "‚úÖ SSHX is running in the background!"

      - name: Start Heartbeat & 1-second Autosave
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üíæ Starting heartbeat and autosave..."
          cd $GITHUB_WORKSPACE/vm_data
          nohup bash -c "while true; do
            echo \"[\$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ VPS alive (autosave running)\" >> status.log
            find . -type d -empty -exec touch {}/.gitkeep \;
            git init -q
            git config user.email 'actions@github.com'
            git config user.name 'github-actions'
            git add .
            git commit -m \"üïê Autosave at \$(date)\" -q || true
            git branch -M vm-data
            git push -f https://$PAT_TOKEN@github.com/${{ github.repository }} vm-data >/dev/null 2>&1 || true
            sleep 1
          done" &
          echo "‚úÖ Heartbeat & autosave running in background."

      - name: Keep VPS alive
        run: |
          echo "üåÄ VPS is running. Waiting for runner shutdown (max 6 hours)..."
          while true; do sleep 60; done

      - name: Final Save + Auto Restart
        if: always()
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üì¶ Runner shutting down ‚Äî saving final VM data..."
          cd $GITHUB_WORKSPACE/vm_data
          find . -type d -empty -exec touch {}/.gitkeep \;
          git init -q
          git config user.email 'actions@github.com'
          git config user.name 'github-actions'
          git add .
          git commit -m "üíæ Final autosave before shutdown $(date)" -q || true
          git branch -M vm-data
          git push -f https://$PAT_TOKEN@github.com/${{ github.repository }} vm-data || true
          echo "‚úÖ Final data saved."

          echo "‚ôªÔ∏è Triggering automatic restart..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/$(basename $GITHUB_WORKFLOW)/dispatches \
            -d '{"ref":"main"}'

          echo "‚úÖ Restart request sent to GitHub API!"
